<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="LinkedListItem" Id="{145197a1-b0ae-480f-9d2e-3a28cdd2aac5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK LinkedListItem Implements I_LinkedListItem_ReadWrite, I_LinkedListItem
VAR
	internalBuffer : POINTER TO BYTE;
	internalBufferSize : UDINT;
	sourceDataType : T_MAXSTRING;
	previousItem : I_LinkedListItem_ReadWrite;
	nextItem : I_LinkedListItem_ReadWrite;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{4aac0288-157a-4954-9753-704ed032ee83}" />
    <Folder Name="Private" Id="{d4cdadcf-db3d-41bf-a95e-c453364157e1}" />
    <Method Name="CopyInternalBufferToDestination" Id="{39c976be-1b1c-4ed7-adbe-2b6aff05010c}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE CopyInternalBufferToDestination
VAR_INPUT
	DestinationAddress : PVOID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[memcpy(DestinationAddress,internalBuffer,internalBufferSize);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="CopySourceToInternalBuffer" Id="{72a972f5-c332-490c-98b2-fbc57602567b}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE CopySourceToInternalBuffer
VAR_INPUT
	SourceAddress : PVOID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[memcpy(internalBuffer,SourceAddress,internalBufferSize);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="DataType" Id="{7cfbb8f0-3ba5-4689-afb9-37bb408b2445}">
      <Declaration><![CDATA[PROPERTY PUBLIC DataType : T_MaxString]]></Declaration>
      <Get Name="Get" Id="{33eccbd5-d69a-4f89-909b-e382c344042c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[DataType := sourceDataType;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="DeleteInternalBuffer" Id="{0b2f16d0-ea60-47d4-8d2f-cb219d773612}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE DeleteInternalBuffer
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF internalBuffer <> 0 THEN
	__DELETE(internalBuffer);
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Destroy" Id="{311e0d50-9d95-447b-9f7d-16d34a7ff70f}">
      <Declaration><![CDATA[METHOD PUBLIC Destroy
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[DeleteInternalBuffer();
__Delete(this);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Equals" Id="{691d2391-52f1-4b30-a37b-a11ec95819c6}">
      <Declaration><![CDATA[METHOD PUBLIC Equals : BOOL
VAR_INPUT
	Symbol : ANY;
END_VAR
VAR
	transform : FB_JsonReadWriteDataType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsInternalBufferSameSizeAs(DINT_TO_UDINT(Symbol.diSize)) THEN
	RETURN;
END_IF

IF DataType <> transform.GetDataTypeNameByAddress(Symbol.diSize,Symbol.pValue) THEN
	RETURN;
END_IF

Equals := memcmp(Symbol.pValue,internalBuffer,Symbol.diSize) = 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{aa5050e3-7bd5-46f0-bcec-c1565801ee0a}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Source : ANY;
END_VAR
VAR
	transform : FB_JsonReadWriteDataType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[MakeInternalBufferOfSize(DINT_TO_UDINT(Source.diSize));
CopySourceToInternalBuffer(Source.pValue);
sourceDataType := transform.GetDataTypeNameByAddress(Source.diSize,Source.pValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get" Id="{8f654b85-5f92-4a32-bae0-56ed9c46637f}">
      <Declaration><![CDATA[METHOD PUBLIC Get : BOOL;
VAR_INPUT
	Destination : ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsInternalBufferSameSizeAs(DINT_TO_UDINT(Destination.diSize)) THEN
	RETURN;
END_IF

CopyInternalBufferToDestination(Destination.pValue);
Get := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsInternalBufferSameSizeAs" Id="{4a4ea573-a854-47f7-b261-8c18a0c29be2}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE IsInternalBufferSameSizeAs : BOOL
VAR_INPUT
	Size : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF internalBuffer = 0 THEN
	RETURN;
END_IF

IF internalBufferSize <> Size THEN
	RETURN;
END_IF

IsInternalBufferSameSizeAs := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeInternalBufferOfSize" Id="{07db7bed-34c5-49fe-a6f5-1d4ddef28561}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE MakeInternalBufferOfSize
VAR_INPUT
	Size : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[internalBufferSize := Size;
internalBuffer := __NEW(BYTE, internalBufferSize);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Next" Id="{dedd5018-9eee-4162-a026-681e2d07b1ee}">
      <Declaration><![CDATA[PROPERTY PUBLIC Next : I_LinkedListItem_ReadWrite]]></Declaration>
      <Get Name="Get" Id="{121648c0-ad4d-4c9f-a728-87b9114faa4f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Next := nextItem;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{0ca43cae-5b30-4615-ad5b-c71b537a241f}">
        <Declaration><![CDATA[PUBLIC 
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[nextItem := Next;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Previous" Id="{d0b69103-fca9-4fdb-bc73-11778d148ddb}">
      <Declaration><![CDATA[PROPERTY PUBLIC Previous : I_LinkedListItem_ReadWrite]]></Declaration>
      <Get Name="Get" Id="{c9509b01-8bbe-4c3d-975e-21220c339e4d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Previous := previousItem;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{48755caa-5e5b-4d2f-b027-f2e48f8cc239}">
        <Declaration><![CDATA[PUBLIC 
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[previousItem := Previous;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>