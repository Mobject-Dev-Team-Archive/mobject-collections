<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{4fc6a7e2-9479-48b5-85ef-622583cb9cd0}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	
//	myLinkedList : LinkedList;
	
//	source : ARRAY [1..5] OF INT := [1,2,3,4,5];
//	destination : ARRAY [0..4] OF INT; 

	mockFooEvent : MockEvent(Name:='foo');
	mockBarEvent : MockEvent(Name:='bar');
	mockHandler : MockEventHandler;
	eventHandlers : EventHandlers;

	events : int;
	register1, register2, trigger1, trigger2, uregister1, uregister2 : BOOL;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//myLinkedList.AddFirst(source[1]); // 1
//myLinkedList.AddFirst(source[2]); // 2,1
//myLinkedList.AddLast(source[3]); // 2,1,3

//myLinkedList.AddBefore(source[4],source[3]); // 2,1,4,3
//myLinkedList.AddAfter(source[1],source[5]); // 2,1,5,4,3

IF register1 THEN
	register1 := FALSE;
	eventHandlers.On('foo',mockHandler);
END_IF

IF register2 THEN
	register2 := FALSE;
	eventHandlers.On('bar',mockHandler);
END_IF

IF trigger1 THEN
	trigger1 := FALSE;
	eventHandlers.Emit(mockFooEvent);
END_IF

IF trigger2 THEN
	trigger2 := FALSE;
	eventHandlers.Emit(mockBarEvent);
END_IF

IF uregister1 THEN
	uregister1 := FALSE;
	eventHandlers.Off('foo',mockHandler);
END_IF

IF uregister2 THEN
	uregister2 := FALSE;
	eventHandlers.Off('bar',mockHandler);
END_IF

events := mockHandler.EventsHandled;

Tests();]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>